<div class="rounded border border-slate-200 bg-white p-4">
    <div class="flex items-center justify-between mb-4">
        <h2 class="text-lg font-semibold">Edit Client Paket: <%= package.name %></h2>
        <a href="/packages/static-ip/<%= package.id %>/clients" class="px-3 py-1.5 rounded border border-slate-300 text-slate-700 hover:bg-slate-50">‚Üê Kembali</a>
    </div>
    <% if (error && error.length > 0) { %>
    <div class="mb-4 p-3 bg-red-100 border border-red-300 text-red-700 rounded"><%= error[0] %></div>
    <% } %>
    <% if (success && success.length > 0) { %>
    <div class="mb-4 p-3 bg-green-100 border border-green-300 text-green-700 rounded"><%= success[0] %></div>
    <% } %>

    <form method="post" action="/packages/static-ip/<%= package.id %>/clients/<%= client.id %>/edit" class="grid grid-cols-1 sm:grid-cols-2 gap-4">
        <div>
            <label class="block text-sm font-medium text-slate-700 mb-1">Nama Client *</label>
            <input name="client_name" value="<%= client.client_name %>" required placeholder="Contoh: Client A" class="w-full rounded border border-slate-300 px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500" />
            <p class="text-xs text-slate-500 mt-1">Nama untuk mengidentifikasi client</p>
        </div>
        <div>
            <label class="block text-sm font-medium text-slate-700 mb-1">IP Address *</label>
            <input name="ip_address" value="<%= client.ip_address %>" required placeholder="192.168.1.1/30" class="w-full rounded border border-slate-300 px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500" />
            <p class="text-xs text-slate-500 mt-1">IP address yang akan digunakan client</p>
        </div>

        <!-- Informasi Kontak -->
        <div class="sm:col-span-2">
            <h3 class="text-md font-medium text-slate-700 mb-3 border-b border-slate-200 pb-2">üìû Informasi Kontak</h3>
        </div>
        
        <div>
            <label class="block text-sm font-medium text-slate-700 mb-1">Alamat</label>
            <textarea name="address" placeholder="Alamat lengkap pelanggan" class="w-full rounded border border-slate-300 px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500" rows="3"><%= client.address || '' %></textarea>
        </div>
        <div>
            <label class="block text-sm font-medium text-slate-700 mb-1">Nomor Telepon</label>
            <input name="phone_number" value="<%= client.phone_number || '' %>" placeholder="08123456789" class="w-full rounded border border-slate-300 px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500" />
        </div>

        <!-- Koordinat & Maps -->
        <div class="sm:col-span-2">
            <h3 class="text-md font-medium text-slate-700 mb-3 border-b border-slate-200 pb-2">üìç Koordinat & Maps</h3>
        </div>
        
        <div>
            <label class="block text-sm font-medium text-slate-700 mb-1">Latitude</label>
            <input name="latitude" type="number" step="any" value="<%= client.latitude || '' %>" placeholder="-6.200000" class="w-full rounded border border-slate-300 px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500" />
        </div>
        <div>
            <label class="block text-sm font-medium text-slate-700 mb-1">Longitude</label>
            <input name="longitude" type="number" step="any" value="<%= client.longitude || '' %>" placeholder="106.816666" class="w-full rounded border border-slate-300 px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500" />
        </div>

        <!-- OLT, ODC, ODP -->
        <div class="sm:col-span-2">
            <h3 class="text-md font-medium text-slate-700 mb-3 border-b border-slate-200 pb-2">üèóÔ∏è Infrastruktur FTTH</h3>
        </div>
        
        <div>
            <label class="block text-sm font-medium text-slate-700 mb-1">OLT (View Only)</label>
            <input name="olt_display" readonly class="w-full rounded border border-slate-300 px-3 py-2 bg-slate-50" value="<%= client.olt_name || '' %>" placeholder="Akan muncul setelah memilih ODP" />
            <input name="olt_id" type="hidden" value="<%= client.olt_id || '' %>" />
        </div>
        <div>
            <label class="block text-sm font-medium text-slate-700 mb-1">ODC (View Only)</label>
            <input name="odc_display" readonly class="w-full rounded border border-slate-300 px-3 py-2 bg-slate-50" value="<%= client.odc_name || '' %>" placeholder="Akan muncul setelah memilih ODP" />
            <input name="odc_id" type="hidden" value="<%= client.odc_id || '' %>" />
        </div>
        
        <div class="sm:col-span-2">
            <label class="block text-sm font-medium text-slate-700 mb-1">ODP *</label>
            <select name="odp_id" required class="w-full rounded border border-slate-300 px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500" onchange="updateOLTODC()">
                <option value="">Pilih ODP</option>
                <% (odpData || []).forEach(function(odp){ %>
                <option value="<%= odp.id %>" <%= client.odp_id == odp.id ? 'selected' : '' %>><%= odp.odp_name %></option>
                <% }) %>
            </select>
            <p class="text-xs text-slate-500 mt-1">Pilih ODP untuk mengisi OLT dan ODC secara otomatis</p>
        </div>

        <!-- Interface MikroTik -->
        <div class="sm:col-span-2">
            <h3 class="text-md font-medium text-slate-700 mb-3 border-b border-slate-200 pb-2">üîß Konfigurasi MikroTik</h3>
        </div>
        
        <div>
            <label class="block text-sm font-medium text-slate-700 mb-1">Interface MikroTik *</label>
            <select name="interface" required class="w-full rounded border border-slate-300 px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500">
                <option value="">-- Pilih Interface --</option>
                <% (interfaces || []).forEach(function(ifc){ %>
                <option value="<%= ifc.name %>" <%= client.interface === ifc.name ? 'selected' : '' %>><%= ifc.name %></option>
                <% }) %>
            </select>
        </div>
        <div>
            <label class="block text-sm font-medium text-slate-700 mb-1">Packet Mark (preview)</label>
            <input id="editPacketMarkPreview" readonly class="w-full rounded border border-slate-300 px-3 py-2 bg-slate-50" />
        </div>

        <div class="sm:col-span-2 flex justify-end gap-3">
            <a href="/packages/static-ip/<%= package.id %>/clients" class="px-4 py-2 rounded border border-slate-300 text-slate-700 hover:bg-slate-50">Batal</a>
            <button type="submit" class="px-4 py-2 rounded bg-blue-600 text-white hover:bg-blue-700">Simpan</button>
        </div>
    </form>

    <script>
    // Data ODP untuk lookup OLT/ODC
    const odpData = <%- JSON.stringify(odpData || []) %>;
    
    function updateOLTODC() {
        const odpSelect = document.querySelector('select[name="odp_id"]');
        const oltDisplay = document.querySelector('input[name="olt_display"]');
        const odcDisplay = document.querySelector('input[name="odc_display"]');
        const oltIdInput = document.querySelector('input[name="olt_id"]');
        const odcIdInput = document.querySelector('input[name="odc_id"]');
        
        const selectedOdpId = odpSelect.value;
        if (selectedOdpId) {
            const odp = odpData.find(o => o.id == selectedOdpId);
            if (odp) {
                oltDisplay.value = odp.olt_name || '';
                odcDisplay.value = odp.odc_name || '';
                oltIdInput.value = odp.olt_id || '';
                odcIdInput.value = odp.odc_id || '';
            }
        } else {
            oltDisplay.value = '';
            odcDisplay.value = '';
            oltIdInput.value = '';
            odcIdInput.value = '';
        }
    }
    
    // Maps integration
    function initMaps() {
        const latInput = document.querySelector('input[name="latitude"]');
        const lngInput = document.querySelector('input[name="longitude"]');
        
        if (latInput && lngInput) {
            latInput.addEventListener('change', updateMapPreview);
            lngInput.addEventListener('change', updateMapPreview);
        }
    }
    
    function updateMapPreview() {
        const lat = document.querySelector('input[name="latitude"]').value;
        const lng = document.querySelector('input[name="longitude"]').value;
        
        if (lat && lng) {
            console.log('Koordinat:', lat, lng);
        }
    }
    
    (function(){
        const ipInput = document.querySelector('input[name="ip_address"]');
        const preview = document.getElementById('editPacketMarkPreview');
        function ipToInt(ip){return ip.split('.').reduce((acc,oct)=> (acc<<8)+parseInt(oct),0)>>>0}
        function intToIp(int){return [(int>>>24)&255,(int>>>16)&255,(int>>>8)&255,int&255].join('.')}
        function update(){
            const v = (ipInput.value||'').trim();
            const [ip,prefStr] = v.split('/');
            const pref = Number(prefStr||'0');
            if (!ip || !pref){ if (preview) preview.value=''; return; }
            const mask = pref===0 ? 0 : (0xFFFFFFFF << (32-pref))>>>0;
            const net = ipToInt(ip) & mask;
            let peer = ip;
            if (pref === 30){
                const firstHost = net + 1;
                const secondHost = net + 2;
                const ipInt = ipToInt(ip);
                peer = (ipInt === firstHost) ? intToIp(secondHost) : (ipInt === secondHost ? intToIp(firstHost) : intToIp(secondHost));
            }
            preview.value = `Download: ${peer} | Upload: UP-${peer}`;
        }
        if (ipInput) ipInput.addEventListener('input', update);
        update();
        
        // Initialize maps
        initMaps();
        
        // Initialize OLT/ODC display on page load
        updateOLTODC();
    })();
    </script>
</div>


