<style>
    /* Prevent horizontal overflow */
    body {
        overflow-x: hidden;
    }
    .table-container {
        overflow-x: auto;
        -webkit-overflow-scrolling: touch;
    }
    /* Make buttons more responsive */
    button[data-action] {
        min-width: auto !important;
        flex-shrink: 0;
    }
    /* Ensure main content doesn't overflow */
    main {
        max-width: 100%;
        overflow-x: hidden;
    }
</style>

<!-- Header -->
<div class="bg-white shadow-sm border-b border-gray-200 rounded-lg mb-6">
    <div class="px-6 py-6">
        <!-- Title -->
        <div class="mb-4">
            <h1 class="text-3xl font-bold text-gray-900">Daftar Tagihan</h1>
            <p class="mt-2 text-sm text-gray-600">Kelola dan pantau semua tagihan pelanggan</p>
        </div>
        
        <!-- Action Buttons -->
        <div style="display: flex; flex-wrap: wrap; gap: 10px; align-items: center;">
                <!-- Generate Tagihan -->
                <button type="button" id="btnGenerateTagihan" data-action="generate-invoice"
                        style="display: inline-flex; align-items: center; background-color: #16a34a; color: white; padding: 10px 16px; border-radius: 8px; font-weight: 500; border: none; cursor: pointer; box-shadow: 0 1px 3px rgba(0,0,0,0.1); white-space: nowrap;">
                    <i class="fas fa-file-invoice" style="margin-right: 8px;"></i>Generate Tagihan
                        </button>
                
                    <!-- Print ODC Area -->
                <div style="position: relative; display: inline-block;">
                    <button type="button" id="btnPrintODC" data-action="print-odc"
                            style="display: inline-flex; align-items: center; background-color: #0891b2; color: white; padding: 10px 16px; border-radius: 8px; font-weight: 500; border: none; cursor: pointer; box-shadow: 0 1px 3px rgba(0,0,0,0.1); white-space: nowrap;">
                        <i class="fas fa-map-marked-alt" style="margin-right: 8px;"></i>Print Area ODC
                        </button>
                        <div id="odcPrintMenu" class="hidden absolute left-0 mt-2 w-64 bg-white rounded-lg shadow-xl border border-gray-200 z-50 max-h-96 overflow-y-auto">
                            <div class="p-2">
                                <div class="text-xs font-semibold text-gray-700 px-3 py-2 bg-cyan-50 border-b border-cyan-100 rounded-t-lg">
                                    <i class="fas fa-building mr-2 text-cyan-600"></i>Pilih Area ODC:
                                </div>
                                <% if (typeof odcList !== 'undefined' && odcList && odcList.length > 0) { %>
                                    <% odcList.forEach(function(odc) { %>
                                        <a href="/billing/tagihan/print-odc/<%= odc.id %>?period=<%= filters.period || '' %>" 
                                           target="_blank"
                                           class="block px-4 py-2.5 text-sm text-gray-700 hover:bg-cyan-50 border-b border-gray-100 last:border-0 transition-colors">
                                            <i class="fas fa-print mr-2 text-cyan-600"></i><%= odc.name %>
                                            <div class="text-xs text-gray-500 ml-6 mt-0.5"><i class="fas fa-map-pin mr-1"></i><%= odc.location || 'Lokasi tidak tersedia' %></div>
                                        </a>
                                    <% }); %>
                                <% } else { %>
                                    <div class="px-4 py-3 text-sm text-gray-500 text-center">
                                        <i class="fas fa-info-circle mr-1"></i>Tidak ada data ODC
                                    </div>
                                <% } %>
                            </div>
                        </div>
                    </div>
                    
                <!-- Bulk Delete -->
                <button type="button" id="bulkDeleteBtn" data-action="bulk-delete" class="bulk-delete-hidden"
                        style="align-items: center; background-color: #dc2626; color: white; padding: 10px 16px; border-radius: 8px; font-weight: 500; border: none; cursor: pointer; box-shadow: 0 1px 3px rgba(0,0,0,0.1); white-space: nowrap;">
                    <i class="fas fa-trash-alt" style="margin-right: 8px;"></i>Hapus Terpilih (<span id="selectedCount">0</span>)
                </button>
                <style>
                    .bulk-delete-hidden {
                        display: none !important;
                    }
                    .bulk-delete-visible {
                        display: inline-flex !important;
                    }
                </style>
                
                <!-- Export PDF -->
                <button type="button" id="btnExportPDF" data-action="export-pdf"
                        style="display: inline-flex; align-items: center; background-color: #6366f1; color: white; padding: 10px 16px; border-radius: 8px; font-weight: 500; border: none; cursor: pointer; box-shadow: 0 1px 3px rgba(0,0,0,0.1); white-space: nowrap;">
                    <i class="fas fa-file-pdf" style="margin-right: 8px;"></i>Export PDF
                    </button>
                    
                <!-- Print All -->
                <button type="button" id="btnPrintAll" data-action="print-all"
                        style="display: inline-flex; align-items: center; background-color: #4b5563; color: white; padding: 10px 16px; border-radius: 8px; font-weight: 500; border: none; cursor: pointer; box-shadow: 0 1px 3px rgba(0,0,0,0.1); white-space: nowrap;">
                    <i class="fas fa-print" style="margin-right: 8px;"></i>Print Semua
                </button>
        </div>
    </div>
</div>

    <!-- Filters -->
        <div class="bg-white rounded-xl shadow-sm border border-gray-200 p-6 mb-6">
            <form method="GET">
                <div class="flex flex-wrap items-end gap-3">
                    <!-- Status Filter -->
                    <div class="flex-1 min-w-[180px]">
                        <label class="block text-xs font-medium text-gray-600 mb-1.5">Status</label>
                        <select name="status" class="w-full px-3 py-2 text-sm border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500">
                            <option value="">Semua Status</option>
                            <option value="draft" <%= filters.status === 'draft' ? 'selected' : '' %>>Draft</option>
                            <option value="sent" <%= filters.status === 'sent' ? 'selected' : '' %>>Terkirim</option>
                            <option value="partial" <%= filters.status === 'partial' ? 'selected' : '' %>>Dibayar Sebagian</option>
                            <option value="paid" <%= filters.status === 'paid' ? 'selected' : '' %>>Lunas</option>
                            <option value="overdue" <%= filters.status === 'overdue' ? 'selected' : '' %>>Jatuh Tempo</option>
                            <option value="cancelled" <%= filters.status === 'cancelled' ? 'selected' : '' %>>Dibatalkan</option>
                        </select>
                    </div>
                    
                    <!-- ODC Filter -->
                    <div class="flex-1 min-w-[180px]">
                        <label class="block text-xs font-medium text-gray-600 mb-1.5">Area ODC</label>
                        <select name="odc_id" class="w-full px-3 py-2 text-sm border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500">
                            <option value="">Semua ODC</option>
                            <% if (typeof odcList !== 'undefined' && odcList && odcList.length > 0) { %>
                                <% odcList.forEach(function(odc) { %>
                                    <option value="<%= odc.id %>" <%= filters.odc_id == odc.id ? 'selected' : '' %>><%= odc.name %></option>
                                <% }); %>
                            <% } %>
                        </select>
                    </div>
                    
                    <!-- Search Input -->
                    <div class="flex-1 min-w-[250px]">
                        <label class="block text-xs font-medium text-gray-600 mb-1.5">Cari</label>
                        <input type="text" name="search" value="<%= filters.search %>" 
                               placeholder="Nama, telepon, atau nomor tagihan" 
                               class="w-full px-3 py-2 text-sm border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500">
                    </div>
                    
                    <!-- Action Buttons -->
                    <div class="flex gap-2">
                        <button type="submit" class="bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700 transition-colors text-sm font-medium">
                            <i class="fas fa-search mr-1.5"></i>Filter
                        </button>
                        <a href="/billing/tagihan" class="bg-gray-500 text-white px-4 py-2 rounded-lg hover:bg-gray-600 transition-colors text-center text-sm font-medium">
                            <i class="fas fa-redo mr-1.5"></i>Reset
                        </a>
                    </div>
                </div>
            </form>
        </div>

        <!-- Invoices Table -->
        <div class="bg-white rounded-xl shadow-sm border border-gray-200 overflow-hidden">
            <div class="px-6 py-4 border-b border-gray-200">
                <h3 class="text-lg font-semibold text-gray-900">Daftar Tagihan</h3>
                <p class="text-sm text-gray-600">Total <%= pagination.totalCount %> tagihan</p>
            </div>
            
            <div class="table-container">
                <table class="min-w-full divide-y divide-gray-200">
                    <thead class="bg-gray-50">
                        <tr>
                            <th class="px-4 py-3 text-left">
                                <input type="checkbox" id="selectAll" class="rounded border-gray-300 text-blue-600 focus:ring-blue-500">
                            </th>
                            <th class="px-4 py-3 text-left text-xs font-medium text-gray-700 uppercase tracking-wider">No. Tagihan</th>
                            <th class="px-4 py-3 text-left text-xs font-medium text-gray-700 uppercase tracking-wider">Pelanggan</th>
                            <th class="px-4 py-3 text-left text-xs font-medium text-gray-700 uppercase tracking-wider">Area ODC</th>
                            <th class="px-4 py-3 text-left text-xs font-medium text-gray-700 uppercase tracking-wider">Jumlah</th>
                            <th class="px-4 py-3 text-left text-xs font-medium text-gray-700 uppercase tracking-wider">Status</th>
                            <th class="px-4 py-3 text-left text-xs font-medium text-gray-700 uppercase tracking-wider">Tanggal</th>
                            <th class="px-4 py-3 text-left text-xs font-medium text-gray-700 uppercase tracking-wider">Jatuh Tempo</th>
                            <th class="px-4 py-3 text-left text-xs font-medium text-gray-700 uppercase tracking-wider">Aksi</th>
                        </tr>
                    </thead>
                    <tbody class="bg-white divide-y divide-gray-200">
                        <% if (invoices && invoices.length > 0) { %>
                            <% invoices.forEach(function(invoice) { %>
                                <tr class="hover:bg-gray-50">
                                    <td class="px-4 py-3 whitespace-nowrap">
                                        <input type="checkbox" class="invoice-checkbox rounded border-gray-300 text-blue-600 focus:ring-blue-500" 
                                               value="<%= invoice.id %>">
                                    </td>
                                    <td class="px-4 py-3 whitespace-nowrap">
                                        <div class="text-sm font-medium text-gray-900"><%= invoice.invoice_number %></div>
                                    </td>
                                    <td class="px-4 py-3 whitespace-nowrap">
                                        <div class="text-sm text-gray-900"><%= invoice.customer_name %></div>
                                        <div class="text-sm text-gray-500"><%= invoice.customer_phone %></div>
                                    </td>
                                    <td class="px-4 py-3 whitespace-nowrap">
                                        <% if (invoice.odc_name) { %>
                                            <div class="text-sm text-gray-900"><i class="fas fa-building mr-1 text-cyan-600"></i><%= invoice.odc_name %></div>
                                            <div class="text-xs text-gray-500"><%= invoice.odc_location || '-' %></div>
                                        <% } else { %>
                                            <span class="text-sm text-gray-400">-</span>
                                        <% } %>
                                    </td>
                                    <td class="px-4 py-3 whitespace-nowrap">
                                        <div class="text-sm font-medium text-gray-900">Rp <%= new Intl.NumberFormat('id-ID').format(invoice.total_amount) %></div>
                                    </td>
                                    <td class="px-4 py-3 whitespace-nowrap">
                                        <% 
                                            let statusClass = '';
                                            let statusText = '';
                                            switch(invoice.status) {
                                                case 'paid':
                                                    statusClass = 'bg-green-100 text-green-800';
                                                    statusText = 'Lunas';
                                                    break;
                                                case 'draft':
                                                    statusClass = 'bg-gray-100 text-gray-800';
                                                    statusText = 'Draft';
                                                    break;
                                                case 'sent':
                                                    statusClass = 'bg-blue-100 text-blue-800';
                                                    statusText = 'Terkirim';
                                                    break;
                                                case 'partial':
                                                    statusClass = 'bg-yellow-100 text-yellow-800';
                                                    statusText = 'Dibayar Sebagian';
                                                    break;
                                                case 'overdue':
                                                    statusClass = 'bg-red-100 text-red-800';
                                                    statusText = 'Jatuh Tempo';
                                                    break;
                                                case 'cancelled':
                                                    statusClass = 'bg-gray-100 text-gray-800';
                                                    statusText = 'Dibatalkan';
                                                    break;
                                                default:
                                                    statusClass = 'bg-gray-100 text-gray-800';
                                                    statusText = invoice.status;
                                            }
                                        %>
                                        <span class="inline-flex px-2 py-1 text-xs font-semibold rounded-full <%= statusClass %>">
                                            <%= statusText %>
                                        </span>
                                    </td>
                                    <td class="px-4 py-3 whitespace-nowrap text-sm text-gray-500">
                                        <%= new Date(invoice.created_at).toLocaleDateString('id-ID') %>
                                    </td>
                                    <td class="px-4 py-3 whitespace-nowrap text-sm text-gray-500">
                                        <%= new Date(invoice.due_date).toLocaleDateString('id-ID') %>
                                    </td>
                                    <td class="px-4 py-3 whitespace-nowrap text-sm font-medium">
                                        <div class="flex space-x-2">
                                            <!-- Detail -->
                                            <button data-action="detail" data-invoice-id="<%= invoice.id %>"
                                                    class="text-blue-600 hover:text-blue-900" 
                                                    title="Detail">
                                                <i class="fas fa-eye"></i>
                                            </button>
                                            
                                            <!-- Print -->
                                            <div class="relative inline-block">
                                                <button data-action="print" data-invoice-id="<%= invoice.id %>"
                                                        class="text-purple-600 hover:text-purple-900" 
                                                        title="Print">
                                                    <i class="fas fa-print"></i>
                                                </button>
                                                <!-- Print Menu Dropdown -->
                                                <div id="printMenu-<%= invoice.id %>" class="hidden absolute left-0 mt-2 w-48 bg-white rounded-lg shadow-lg border border-gray-200 z-10">
                                                    <a href="/billing/tagihan/<%= invoice.id %>/print" 
                                                       target="_blank" 
                                                       class="block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 rounded-t-lg">
                                                        <i class="fas fa-file-pdf mr-2"></i>Print A4
                                                    </a>
                                                    <a href="/billing/tagihan/<%= invoice.id %>/print-thermal" 
                                                       target="_blank" 
                                                       class="block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 rounded-b-lg">
                                                        <i class="fas fa-receipt mr-2"></i>Print Thermal 58mm
                                                    </a>
                                                </div>
                                            </div>
                                            
                                            <!-- Pay -->
                                            <% if (invoice.status !== 'paid' && invoice.status !== 'cancelled') { %>
                                                <button data-action="pay" data-invoice-id="<%= invoice.id %>"
                                                        class="text-green-600 hover:text-green-900" 
                                                        title="Bayar">
                                                    <i class="fas fa-money-bill-wave"></i>
                                                </button>
                                            <% } %>
                                            
                                            <!-- Isolate/Restore -->
                                            <% if (invoice.customer_is_isolated) { %>
                                                <button data-action="restore" 
                                                        data-customer-id="<%= invoice.customer_id %>" 
                                                        data-customer-name="<%= invoice.customer_name %>"
                                                        class="text-orange-600 hover:text-orange-900" 
                                                        title="Restore">
                                                    <i class="fas fa-unlock"></i>
                                                </button>
                                            <% } else { %>
                                                <button data-action="isolate" 
                                                        data-customer-id="<%= invoice.customer_id %>" 
                                                        data-customer-name="<%= invoice.customer_name %>"
                                                        class="text-red-600 hover:text-red-900" 
                                                        title="Isolir">
                                                    <i class="fas fa-lock"></i>
                                                </button>
                                            <% } %>
                                            
                                            <!-- Delete -->
                                            <button data-action="delete" 
                                                    data-invoice-id="<%= invoice.id %>" 
                                                    data-invoice-number="<%= invoice.invoice_number %>"
                                                    class="text-gray-600 hover:text-gray-900" 
                                                    title="Hapus">
                                                    <i class="fas fa-trash"></i>
                                            </button>
                                        </div>
                                    </td>
                                </tr>
                            <% }); %>
                        <% } else { %>
                            <tr>
                                <td colspan="9" class="px-4 py-12 text-center text-gray-500">
                                    <i class="fas fa-inbox text-4xl mb-4 block"></i>
                                    <p>Tidak ada tagihan ditemukan</p>
                                </td>
                            </tr>
                        <% } %>
                    </tbody>
                </table>
            </div>
        </div>

        <!-- Pagination -->
        <% if (pagination.totalPages > 1) { %>
            <div class="bg-white px-4 py-3 flex items-center justify-between border-t border-gray-200 sm:px-6 mt-6 rounded-xl shadow-sm border">
                <div class="flex-1 flex justify-between sm:hidden">
                    <% if (pagination.currentPage > 1) { %>
                        <a href="?page=<%= pagination.currentPage - 1 %>" class="relative inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50">
                            Sebelumnya
                        </a>
                    <% } %>
                    <% if (pagination.currentPage < pagination.totalPages) { %>
                        <a href="?page=<%= pagination.currentPage + 1 %>" class="ml-3 relative inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50">
                            Selanjutnya
                        </a>
                    <% } %>
                </div>
                <div class="hidden sm:flex-1 sm:flex sm:items-center sm:justify-between">
                    <div>
                        <p class="text-sm text-gray-700">
                            Menampilkan <span class="font-medium"><%= ((pagination.currentPage - 1) * pagination.limit) + 1 %></span>
                            sampai <span class="font-medium"><%= Math.min(pagination.currentPage * pagination.limit, pagination.totalCount) %></span>
                            dari <span class="font-medium"><%= pagination.totalCount %></span> hasil
                        </p>
                    </div>
                    <div>
                        <nav class="relative z-0 inline-flex rounded-md shadow-sm -space-x-px">
                            <% if (pagination.currentPage > 1) { %>
                                <a href="?page=<%= pagination.currentPage - 1 %>" class="relative inline-flex items-center px-2 py-2 rounded-l-md border border-gray-300 bg-white text-sm font-medium text-gray-500 hover:bg-gray-50">
                                    <i class="fas fa-chevron-left"></i>
                                </a>
                            <% } %>
                            
                            <% for (let i = Math.max(1, pagination.currentPage - 2); i <= Math.min(pagination.totalPages, pagination.currentPage + 2); i++) { %>
                                <% if (i === pagination.currentPage) { %>
                                    <span class="relative inline-flex items-center px-4 py-2 border border-gray-300 bg-blue-50 text-sm font-medium text-blue-600">
                                        <%= i %>
                                    </span>
                                <% } else { %>
                                    <a href="?page=<%= i %>" class="relative inline-flex items-center px-4 py-2 border border-gray-300 bg-white text-sm font-medium text-gray-700 hover:bg-gray-50">
                                        <%= i %>
                                    </a>
                                <% } %>
                            <% } %>
                            
                            <% if (pagination.currentPage < pagination.totalPages) { %>
                                <a href="?page=<%= pagination.currentPage + 1 %>" class="relative inline-flex items-center px-2 py-2 rounded-r-md border border-gray-300 bg-white text-sm font-medium text-gray-500 hover:bg-gray-50">
                                    <i class="fas fa-chevron-right"></i>
                                </a>
                            <% } %>
                        </nav>
                    </div>
                </div>
            </div>
        <% } %>

<!-- Generate Invoice Modal -->
<div id="generateInvoiceModal" style="display: none; position: fixed; top: 0; left: 0; right: 0; bottom: 0; background-color: rgba(0,0,0,0.5); z-index: 9999; align-items: center; justify-content: center;">
    <div style="background: white; border-radius: 12px; padding: 24px; max-width: 500px; width: 90%; box-shadow: 0 20px 25px -5px rgba(0,0,0,0.1);">
        <!-- Header -->
        <div style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 20px;">
            <h3 style="font-size: 20px; font-weight: bold; color: #111827; margin: 0;">
                <i class="fas fa-file-invoice" style="color: #16a34a; margin-right: 8px;"></i>Generate Tagihan
            </h3>
            <button id="btnCloseModal" data-action="close-modal" style="background: none; border: none; font-size: 24px; cursor: pointer; color: #6b7280;">
                &times;
            </button>
        </div>
        
        <!-- Form -->
        <form id="generateInvoiceForm">
            <!-- Period Selection -->
            <div style="margin-bottom: 16px;">
                <label style="display: block; font-size: 14px; font-weight: 600; color: #374151; margin-bottom: 8px;">
                    Periode Tagihan:
                </label>
                <input type="month" id="invoicePeriod" required
                       style="width: 100%; padding: 10px 12px; border: 1px solid #d1d5db; border-radius: 8px; font-size: 14px;">
            </div>
            
            <!-- Due Date Offset -->
            <div style="margin-bottom: 16px;">
                <label style="display: block; font-size: 14px; font-weight: 600; color: #374151; margin-bottom: 8px;">
                    Jatuh Tempo (Tanggal ke):
                </label>
                <input type="number" id="dueDateOffset" value="7" min="1" max="31" required
                       style="width: 100%; padding: 10px 12px; border: 1px solid #d1d5db; border-radius: 8px; font-size: 14px;">
                <p style="font-size: 12px; color: #6b7280; margin-top: 4px;">
                    <i class="fas fa-info-circle"></i> Tagihan akan jatuh tempo pada tanggal ini setiap bulan
                </p>
            </div>
            
            <!-- WhatsApp Option -->
            <div style="margin-bottom: 20px;">
                <label style="display: flex; align-items: center; cursor: pointer;">
                    <input type="checkbox" id="sendWhatsapp" checked
                           style="width: 18px; height: 18px; margin-right: 8px; cursor: pointer;">
                    <span style="font-size: 14px; color: #374151;">
                        <i class="fab fa-whatsapp" style="color: #25d366; margin-right: 4px;"></i>
                        Kirim notifikasi WhatsApp otomatis
                    </span>
                </label>
            </div>
            
            <!-- Info Box -->
            <div style="background-color: #dbeafe; border-left: 4px solid #3b82f6; padding: 12px; border-radius: 6px; margin-bottom: 20px;">
                <p style="font-size: 13px; color: #1e40af; margin: 0;">
                    <i class="fas fa-lightbulb" style="margin-right: 6px;"></i>
                    <strong>Info:</strong> Sistem akan mengambil data dari <strong>semua pelanggan aktif</strong> dan membuat tagihan berdasarkan paket langganan mereka.
                </p>
            </div>
            
            <!-- Buttons -->
            <div style="display: flex; gap: 10px; justify-content: flex-end;">
                <button type="button" id="btnCancelModal" data-action="cancel-modal"
                        style="padding: 10px 20px; border: 1px solid #d1d5db; background: white; color: #374151; border-radius: 8px; font-weight: 500; cursor: pointer;">
                    Batal
                </button>
                <button type="submit"
                        style="padding: 10px 20px; border: none; background: #16a34a; color: white; border-radius: 8px; font-weight: 500; cursor: pointer; display: inline-flex; align-items: center;">
                    <i class="fas fa-check" style="margin-right: 6px;"></i>
                    Generate Sekarang
                </button>
            </div>
        </form>
    </div>
</div>

<script>
    // Show Generate Invoice Modal
    function showGenerateInvoiceModal() {
        console.log('🟢 showGenerateInvoiceModal() called!');
        const modal = document.getElementById('generateInvoiceModal');
        console.log('Modal element:', modal);
        
        if (!modal) {
            alert('❌ ERROR: Modal element not found! Please refresh the page.');
            return;
        }
        
        const now = new Date();
        const currentMonth = `${now.getFullYear()}-${String(now.getMonth() + 1).padStart(2, '0')}`;
        
        // Set default to current month
        const periodInput = document.getElementById('invoicePeriod');
        if (periodInput) {
            periodInput.value = currentMonth;
            console.log('✅ Period set to:', currentMonth);
        }
        
        // Show modal
        modal.style.display = 'flex';
        console.log('✅ Modal displayed');
    }
    
    // Close Generate Invoice Modal
    function closeGenerateInvoiceModal() {
        const modal = document.getElementById('generateInvoiceModal');
        modal.style.display = 'none';
    }
    
    // Handle form submission and button clicks
    document.addEventListener('DOMContentLoaded', function() {
        console.log('🚀 Page loaded, initializing handlers...');
        
        // Generate Tagihan button
        const btnGenerate = document.getElementById('btnGenerateTagihan');
        if (btnGenerate) {
            console.log('✅ Generate button found');
            btnGenerate.addEventListener('click', function() {
                console.log('🟢 Generate button clicked!');
                showGenerateInvoiceModal();
            });
        }
        
        // Print ODC button
        const btnPrintODC = document.getElementById('btnPrintODC');
        if (btnPrintODC) {
            btnPrintODC.addEventListener('click', function(e) {
                toggleOdcPrintMenu(e);
            });
        }
        
        // Bulk Delete button
        const btnBulkDelete = document.getElementById('bulkDeleteBtn');
        if (btnBulkDelete) {
            btnBulkDelete.addEventListener('click', function() {
                bulkDeleteInvoices();
            });
        }
        
        // Export PDF button
        const btnExportPDF = document.getElementById('btnExportPDF');
        if (btnExportPDF) {
            btnExportPDF.addEventListener('click', function() {
                exportPDF();
            });
        }
        
        // Print All button
        const btnPrintAll = document.getElementById('btnPrintAll');
        if (btnPrintAll) {
            btnPrintAll.addEventListener('click', function() {
                printAllInvoices();
            });
        }
        
        // Modal close buttons
        const btnCloseModal = document.getElementById('btnCloseModal');
        const btnCancelModal = document.getElementById('btnCancelModal');
        if (btnCloseModal) {
            btnCloseModal.addEventListener('click', closeGenerateInvoiceModal);
        }
        if (btnCancelModal) {
            btnCancelModal.addEventListener('click', closeGenerateInvoiceModal);
        }
        
        // Form submission
        const form = document.getElementById('generateInvoiceForm');
        if (form) {
            console.log('✅ Form found');
            form.addEventListener('submit', function(e) {
                e.preventDefault();
                console.log('📝 Form submitted');
                generateInvoicesFromForm();
            });
        }
        
        // Close modal when clicking outside
        const modal = document.getElementById('generateInvoiceModal');
        if (modal) {
            console.log('✅ Modal found');
            modal.addEventListener('click', function(e) {
                if (e.target === modal) {
                    closeGenerateInvoiceModal();
                }
            });
        }
        
        // Select All checkbox
        const selectAllCheckbox = document.getElementById('selectAll');
        if (selectAllCheckbox) {
            console.log('✅ Select All checkbox found');
            selectAllCheckbox.addEventListener('change', toggleSelectAll);
        }
        
        // Invoice checkboxes
        const invoiceCheckboxes = document.querySelectorAll('.invoice-checkbox');
        console.log(`✅ Found ${invoiceCheckboxes.length} invoice checkboxes`);
        invoiceCheckboxes.forEach(function(checkbox) {
            checkbox.addEventListener('change', updateBulkDeleteButton);
        });
        
        // Event delegation for table action buttons
        document.addEventListener('click', function(e) {
            const button = e.target.closest('button[data-action]');
            if (!button) return;
            
            const action = button.dataset.action;
            console.log('🎯 Action button clicked:', action);
            
            switch(action) {
                case 'detail':
                    showInvoiceDetail(button.dataset.invoiceId);
                    break;
                case 'print':
                    togglePrintMenu(e, button.dataset.invoiceId);
                    break;
                case 'pay':
                    showPaymentForm(button.dataset.invoiceId);
                    break;
                case 'isolate':
                    isolateCustomer(button.dataset.customerId, button.dataset.customerName);
                    break;
                case 'restore':
                    restoreCustomer(button.dataset.customerId, button.dataset.customerName);
                    break;
                case 'delete':
                    deleteInvoice(button.dataset.invoiceId, button.dataset.invoiceNumber);
                    break;
            }
        });
        
        console.log('✅ All handlers initialized including table actions');
    });
    
    // Generate invoices from form data
    function generateInvoicesFromForm() {
        const period = document.getElementById('invoicePeriod').value;
        const dueDateOffset = parseInt(document.getElementById('dueDateOffset').value);
        const sendWhatsapp = document.getElementById('sendWhatsapp').checked;
        
        if (!period) {
            alert('❌ Pilih periode tagihan terlebih dahulu');
            return;
        }
        
        // Parse period
        const [year, month] = period.split('-');
        const monthNames = ['Januari', 'Februari', 'Maret', 'April', 'Mei', 'Juni', 
                           'Juli', 'Agustus', 'September', 'Oktober', 'November', 'Desember'];
        const monthName = monthNames[parseInt(month) - 1];
        
        const confirmMsg = `📋 GENERATE TAGIHAN

📅 Periode: ${monthName} ${year}
💳 Jatuh Tempo: Tanggal ${dueDateOffset}
📱 WhatsApp: ${sendWhatsapp ? 'Ya, kirim otomatis' : 'Tidak'}

ℹ️ Sistem akan:
• Mengambil data dari semua pelanggan aktif
• Membuat tagihan berdasarkan paket langganan
• ${sendWhatsapp ? 'Mengirim notifikasi WhatsApp' : 'Tidak mengirim notifikasi'}

Lanjutkan?`;
        
        if (!confirm(confirmMsg)) {
            return;
        }
        
        // Close modal
        closeGenerateInvoiceModal();
        
        // Show loading
        const submitBtn = document.querySelector('#generateInvoiceForm button[type="submit"]');
        const originalHTML = submitBtn.innerHTML;
        submitBtn.disabled = true;
        submitBtn.innerHTML = '<i class="fas fa-spinner fa-spin" style="margin-right: 6px;"></i>Memproses...';
        
        // Send request
        fetch('/billing/tagihan/generate-bulk', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ 
                period: period,
                due_date_offset: dueDateOffset,
                send_whatsapp: sendWhatsapp
            })
        })
        .then(response => response.json())
        .then(data => {
            submitBtn.disabled = false;
            submitBtn.innerHTML = originalHTML;
            
            if (data.success) {
                const msg = `✅ BERHASIL!

📊 Periode: ${monthName} ${year}
✓ Dibuat: ${data.created_count} tagihan baru
📋 Total pelanggan: ${data.total_subscriptions}
${data.skipped_count > 0 ? `⚠️ Dilewati: ${data.skipped_count} (sudah ada tagihan)` : ''}
${sendWhatsapp && data.whatsapp_sent ? `📱 WhatsApp: ${data.whatsapp_sent} terkirim` : ''}

Halaman akan di-refresh...`;
                
                alert(msg);
                location.reload();
            } else {
                alert('❌ GAGAL!\n\n' + (data.message || 'Terjadi kesalahan'));
            }
        })
        .catch(error => {
            submitBtn.disabled = false;
            submitBtn.innerHTML = originalHTML;
            console.error('Error:', error);
            alert('❌ TERJADI KESALAHAN!\n\n' + error.message);
        });
    }

    // Toggle select all checkboxes
    function toggleSelectAll() {
        const selectAll = document.getElementById('selectAll');
        const checkboxes = document.querySelectorAll('.invoice-checkbox');
        checkboxes.forEach(cb => cb.checked = selectAll.checked);
        updateBulkDeleteButton();
    }

    // Update bulk delete button visibility
    function updateBulkDeleteButton() {
        const checkboxes = document.querySelectorAll('.invoice-checkbox:checked');
        const bulkDeleteBtn = document.getElementById('bulkDeleteBtn');
        const selectedCount = document.getElementById('selectedCount');
        
        console.log('✅ Checkbox checked:', checkboxes.length); // Debug
        console.log('✅ Button element:', bulkDeleteBtn); // Debug
        
        if (checkboxes.length > 0) {
            // Remove hidden class, add visible class
            bulkDeleteBtn.classList.remove('bulk-delete-hidden');
            bulkDeleteBtn.classList.add('bulk-delete-visible');
            selectedCount.textContent = checkboxes.length;
            console.log('✅ Button shown with', checkboxes.length, 'items'); // Debug
        } else {
            // Remove visible class, add hidden class
            bulkDeleteBtn.classList.remove('bulk-delete-visible');
            bulkDeleteBtn.classList.add('bulk-delete-hidden');
            console.log('❌ Button hidden'); // Debug
        }
    }

    // Bulk delete invoices
    function bulkDeleteInvoices() {
        console.log('🗑️ Bulk delete function called');
        const checkboxes = document.querySelectorAll('.invoice-checkbox:checked');
        const invoiceIds = Array.from(checkboxes).map(cb => cb.value);
        console.log('Selected invoices:', invoiceIds);
        
        if (invoiceIds.length === 0) {
            alert('Pilih minimal 1 tagihan untuk dihapus');
            return;
        }

        if (confirm(`⚠️ PERHATIAN: Hapus ${invoiceIds.length} tagihan terpilih?

- Semua data pembayaran terkait juga akan dihapus
- Tindakan ini tidak dapat dibatalkan`)) {
            fetch('/billing/tagihan/bulk-delete', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ invoiceIds: invoiceIds })
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    alert(`✅ Berhasil menghapus ${data.deleted} tagihan\n❌ Gagal: ${data.failed}`);
                    location.reload();
                } else {
                    alert('❌ ' + data.message);
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('❌ Terjadi kesalahan saat menghapus tagihan');
            });
        }
    }

    // Toggle print menu
    function togglePrintMenu(event, invoiceId) {
        event.stopPropagation();
        const menu = document.getElementById(`printMenu-${invoiceId}`);
        
        // Close all other menus
        document.querySelectorAll('[id^="printMenu-"]').forEach(m => {
            if (m.id !== `printMenu-${invoiceId}`) m.classList.add('hidden');
        });
        
        menu.classList.toggle('hidden');
    }

    // Close print menus when clicking outside
    document.addEventListener('click', function(event) {
        // Close invoice print menus
        document.querySelectorAll('[id^="printMenu-"]').forEach(m => m.classList.add('hidden'));
        
        // Close ODC print menu if click is outside
        const odcMenu = document.getElementById('odcPrintMenu');
        const odcButton = event.target.closest('[onclick*="toggleOdcPrintMenu"]');
        if (odcMenu && !odcButton && !odcMenu.contains(event.target)) {
            odcMenu.classList.add('hidden');
        }
    });

    // Toggle ODC print menu
    function toggleOdcPrintMenu(event) {
        if (event) event.stopPropagation();
        const menu = document.getElementById('odcPrintMenu');
        if (menu) {
            menu.classList.toggle('hidden');
        }
    }


    // Show invoice detail modal
    function showInvoiceDetail(invoiceId) {
        window.location.href = `/billing/tagihan/${invoiceId}`;
    }

    // Show payment form
    function showPaymentForm(invoiceId) {
        window.location.href = `/billing/tagihan/${invoiceId}/pay`;
    }

    // Isolate customer
    function isolateCustomer(customerId, customerName) {
        if (confirm(`Apakah Anda yakin ingin mengisolir pelanggan ${customerName}?\n\nIni akan memblokir akses internet pelanggan di MikroTik.`)) {
            const reason = prompt('Alasan isolasi:', 'Belum bayar tagihan');
            if (!reason) return;

            fetch('/billing/customer/isolate', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ 
                    customerId: customerId,
                    reason: reason
                })
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    alert('✅ Pelanggan berhasil diisolir');
                    location.reload();
                } else {
                    alert('❌ Gagal mengisolir: ' + data.message);
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('❌ Terjadi kesalahan saat mengisolir pelanggan');
            });
        }
    }

    // Restore customer
    function restoreCustomer(customerId, customerName) {
        if (confirm(`Apakah Anda yakin ingin memulihkan akses pelanggan ${customerName}?\n\nIni akan mengaktifkan kembali akses internet pelanggan.`)) {
            const reason = prompt('Alasan restore:', 'Sudah bayar tagihan');
            if (!reason) return;

            fetch('/billing/customer/restore', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ 
                    customerId: customerId,
                    reason: reason
                })
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    alert('✅ Pelanggan berhasil dipulihkan');
                    location.reload();
                } else {
                    alert('❌ Gagal memulihkan: ' + data.message);
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('❌ Terjadi kesalahan saat memulihkan pelanggan');
            });
        }
    }

    // Delete invoice
    function deleteInvoice(invoiceId, invoiceNumber) {
        if (confirm(`Apakah Anda yakin ingin menghapus tagihan ${invoiceNumber}?

⚠️ PERHATIAN:
- Data pembayaran terkait juga akan dihapus
- Tindakan ini tidak dapat dibatalkan`)) {
            fetch(`/billing/tagihan/${invoiceId}`, {
                method: 'DELETE',
                headers: {
                    'Content-Type': 'application/json',
                }
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    alert('✅ ' + data.message);
                    location.reload();
                } else {
                    alert('❌ Gagal menghapus: ' + data.message);
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('❌ Terjadi kesalahan saat menghapus tagihan');
            });
        }
    }

    // Update invoice status (legacy function, kept for compatibility)
    function updateStatus(invoiceId, status) {
        if (confirm('Apakah Anda yakin ingin mengubah status tagihan ini?')) {
            fetch(`/billing/tagihan/${invoiceId}/status`, {
                method: 'PUT',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ status: status })
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    location.reload();
                } else {
                    alert('Gagal mengubah status: ' + data.message);
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('Terjadi kesalahan saat mengubah status');
            });
        }
    }

    // Export invoices to PDF
    function exportPDF() {
        const params = new URLSearchParams(window.location.search);
        window.open('/billing/tagihan/export/pdf?' + params.toString(), '_blank');
    }

    // Print all invoices
    function printAllInvoices() {
        const params = new URLSearchParams(window.location.search);
        window.open('/billing/tagihan/print-all?' + params.toString(), '_blank');
    }
</script>