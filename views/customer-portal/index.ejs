<!DOCTYPE html>
<html lang="id">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Portal Pelanggan - Status Koneksi</title>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="/assets/styles.css">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    <!-- Chart.js temporarily disabled -->
    <style>
        .status-online { color: #10b981; }
        .status-offline { color: #ef4444; }
        .status-maintenance { color: #f59e0b; }
        .status-unknown { color: #6b7280; }
    </style>
</head>
<body class="min-h-screen bg-gray-50 text-gray-800 font-sans" style="font-family: 'Inter', ui-sans-serif, system-ui, -apple-system, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, 'Noto Sans', 'Apple Color Emoji', 'Segoe UI Emoji'">
    <div class="min-h-screen">
        <!-- Header -->
        <header class="bg-white shadow-sm border-b border-gray-200">
            <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
                <div class="flex justify-between items-center py-4">
                    <div class="flex items-center">
                        <div class="w-8 h-8 bg-blue-600 rounded-lg flex items-center justify-center mr-3">
                            <svg class="w-5 h-5 text-white" fill="currentColor" viewBox="0 0 20 20">
                                <path d="M3 4a1 1 0 011-1h12a1 1 0 011 1v2a1 1 0 01-1 1H4a1 1 0 01-1-1V4zM3 10a1 1 0 011-1h6a1 1 0 011 1v6a1 1 0 01-1 1H4a1 1 0 01-1-1v-6zM14 9a1 1 0 00-1 1v6a1 1 0 001 1h2a1 1 0 001-1v-6a1 1 0 00-1-1h-2z"/>
                            </svg>
                        </div>
                        <div>
                            <h1 class="text-xl font-bold text-gray-900">Portal Pelanggan</h1>
                            <p class="text-sm text-gray-600">Monitor status koneksi internet Anda</p>
                        </div>
                    </div>
                    <div class="flex items-center space-x-4">
                        <div class="flex items-center space-x-2">
                            <div id="connectionStatus" class="w-3 h-3 rounded-full bg-gray-400"></div>
                            <span id="connectionText" class="text-sm text-gray-600">Loading...</span>
                        </div>
                        <button id="refreshBtn" class="bg-blue-500 hover:bg-blue-600 text-white px-4 py-2 rounded-md text-sm flex items-center gap-2">
                            <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15"></path>
                            </svg>
                            Refresh
                        </button>
                    </div>
                </div>
            </div>
        </header>

        <!-- Main Content -->
        <main class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
            <!-- Customer Info -->
            <div class="bg-white rounded-lg shadow-md p-6 mb-8">
                <h2 class="text-lg font-semibold text-gray-900 mb-4">Informasi Pelanggan</h2>
                <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4">
                    <div>
                        <label class="block text-sm font-medium text-gray-500">Nama</label>
                        <p class="text-sm text-gray-900" id="customerName">-</p>
                    </div>
                    <div>
                        <label class="block text-sm font-medium text-gray-500">Service ID</label>
                        <p class="text-sm text-gray-900" id="serviceId">-</p>
                    </div>
                    <div>
                        <label class="block text-sm font-medium text-gray-500">Paket</label>
                        <p class="text-sm text-gray-900" id="packageName">-</p>
                    </div>
                    <div>
                        <label class="block text-sm font-medium text-gray-500">Alamat</label>
                        <p class="text-sm text-gray-900" id="customerAddress">-</p>
                    </div>
                </div>
            </div>

            <!-- Current Status -->
            <div class="grid grid-cols-1 lg:grid-cols-3 gap-6 mb-8">
                <div class="bg-white rounded-lg shadow-md p-6">
                    <div class="flex items-center">
                        <div class="flex-shrink-0">
                            <div class="w-8 h-8 bg-green-100 rounded-full flex items-center justify-center">
                                <svg class="w-5 h-5 text-green-600" fill="currentColor" viewBox="0 0 20 20">
                                    <path d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"/>
                                </svg>
                            </div>
                        </div>
                        <div class="ml-4">
                            <p class="text-sm font-medium text-gray-500">Status Koneksi</p>
                            <p class="text-lg font-semibold text-gray-900" id="connectionStatusText">-</p>
                        </div>
                    </div>
                </div>

                <div class="bg-white rounded-lg shadow-md p-6">
                    <div class="flex items-center">
                        <div class="flex-shrink-0">
                            <div class="w-8 h-8 bg-blue-100 rounded-full flex items-center justify-center">
                                <svg class="w-5 h-5 text-blue-600" fill="currentColor" viewBox="0 0 20 20">
                                    <path d="M3 4a1 1 0 011-1h12a1 1 0 011 1v2a1 1 0 01-1 1H4a1 1 0 01-1-1V4zM3 10a1 1 0 011-1h6a1 1 0 011 1v6a1 1 0 01-1 1H4a1 1 0 01-1-1v-6zM14 9a1 1 0 00-1 1v6a1 1 0 001 1h2a1 1 0 001-1v-6a1 1 0 00-1-1h-2z"/>
                                </svg>
                            </div>
                        </div>
                        <div class="ml-4">
                            <p class="text-sm font-medium text-gray-500">Uptime</p>
                            <p class="text-lg font-semibold text-gray-900" id="uptimePercentage">-</p>
                        </div>
                    </div>
                </div>

                <div class="bg-white rounded-lg shadow-md p-6">
                    <div class="flex items-center">
                        <div class="flex-shrink-0">
                            <div class="w-8 h-8 bg-purple-100 rounded-full flex items-center justify-center">
                                <svg class="w-5 h-5 text-purple-600" fill="currentColor" viewBox="0 0 20 20">
                                    <path d="M3 4a1 1 0 011-1h12a1 1 0 011 1v2a1 1 0 01-1 1H4a1 1 0 01-1-1V4zM3 10a1 1 0 011-1h6a1 1 0 011 1v6a1 1 0 01-1 1H4a1 1 0 01-1-1v-6zM14 9a1 1 0 00-1 1v6a1 1 0 001 1h2a1 1 0 001-1v-6a1 1 0 00-1-1h-2z"/>
                                </svg>
                            </div>
                        </div>
                        <div class="ml-4">
                            <p class="text-sm font-medium text-gray-500">Latency</p>
                            <p class="text-lg font-semibold text-gray-900" id="latencyValue">-</p>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Performance Charts -->
            <div class="grid grid-cols-1 lg:grid-cols-2 gap-6 mb-8">
                <div class="bg-white rounded-lg shadow-md p-6">
                    <h3 class="text-lg font-semibold text-gray-900 mb-4">Trend Uptime (7 Hari Terakhir)</h3>
                    <canvas id="uptimeChart" width="400" height="200"></canvas>
                </div>

                <div class="bg-white rounded-lg shadow-md p-6">
                    <h3 class="text-lg font-semibold text-gray-900 mb-4">Trend Latency (7 Hari Terakhir)</h3>
                    <canvas id="latencyChart" width="400" height="200"></canvas>
                </div>
            </div>

            <!-- Recent Incidents -->
            <div class="bg-white rounded-lg shadow-md mb-8">
                <div class="px-6 py-4 border-b border-gray-200">
                    <h3 class="text-lg font-semibold text-gray-900">Insiden Terbaru</h3>
                </div>
                <div id="incidentsList" class="p-6">
                    <!-- Incidents will be populated by JavaScript -->
                </div>
            </div>

            <!-- Support Information -->
            <div class="bg-blue-50 rounded-lg p-6">
                <div class="flex items-start">
                    <div class="flex-shrink-0">
                        <svg class="w-6 h-6 text-blue-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M18.364 5.636l-3.536 3.536m0 5.656l3.536 3.536M9.172 9.172L5.636 5.636m3.536 9.192L5.636 18.364M12 2.25a9.75 9.75 0 100 19.5 9.75 9.75 0 000-19.5z"/>
                        </svg>
                    </div>
                    <div class="ml-3">
                        <h3 class="text-lg font-medium text-blue-900">Butuh Bantuan?</h3>
                        <p class="mt-1 text-sm text-blue-700">
                            Jika Anda mengalami masalah dengan koneksi internet, silakan hubungi tim support kami:
                        </p>
                        <div class="mt-3 space-y-1">
                            <p class="text-sm text-blue-700">
                                <strong>Telepon:</strong> <span id="supportPhone">021-12345678</span>
                            </p>
                            <p class="text-sm text-blue-700">
                                <strong>Email:</strong> <span id="supportEmail">support@company.com</span>
                            </p>
                            <p class="text-sm text-blue-700">
                                <strong>Jam Operasional:</strong> 24/7
                            </p>
                        </div>
                    </div>
                </div>
            </div>
        </main>
    </div>

    <script>
    // Global variables
    let ws = null;
    let isConnected = false;
    let uptimeChart = null;
    let latencyChart = null;
    let customerData = null;

    // Initialize WebSocket connection
    function initWebSocket() {
        const protocol = window.location.protocol === 'https:' ? 'wss:' : 'ws:';
        const wsUrl = `${protocol}//${window.location.host}/ws`;
        
        ws = new WebSocket(wsUrl);
        
        ws.onopen = function() {
            console.log('WebSocket connected');
            isConnected = true;
            updateConnectionStatus(true);
            
            // Subscribe to customer monitoring topics
            ws.send(JSON.stringify({
                type: 'subscribe',
                topics: ['customer_status', 'performance_metrics']
            }));
        };
        
        ws.onmessage = function(event) {
            const data = JSON.parse(event.data);
            console.log('Received:', data);
            
            switch(data.type) {
                case 'customer_status':
                    updateCustomerStatus(data.data);
                    break;
                case 'performance_metrics':
                    updatePerformanceCharts(data.data);
                    break;
            }
        };
        
        ws.onclose = function() {
            console.log('WebSocket disconnected');
            isConnected = false;
            updateConnectionStatus(false);
            
            // Reconnect after 3 seconds
            setTimeout(initWebSocket, 3000);
        };
        
        ws.onerror = function(error) {
            console.error('WebSocket error:', error);
            isConnected = false;
            updateConnectionStatus(false);
        };
    }

    // Update connection status indicator
    function updateConnectionStatus(connected) {
        const statusEl = document.getElementById('connectionStatus');
        const textEl = document.getElementById('connectionText');
        
        if (connected) {
            statusEl.className = 'w-3 h-3 rounded-full bg-green-400';
            textEl.textContent = 'Connected';
        } else {
            statusEl.className = 'w-3 h-3 rounded-full bg-red-400';
            textEl.textContent = 'Disconnected';
        }
    }

    // Load customer data
    async function loadCustomerData() {
        try {
            // Get customer ID from URL or localStorage
            const urlParams = new URLSearchParams(window.location.search);
            const customerId = urlParams.get('id') || localStorage.getItem('customerId');
            
            if (!customerId) {
                alert('Customer ID tidak ditemukan. Silakan hubungi support.');
                return;
            }

            const response = await fetch(`/api/monitoring/customers/${customerId}`);
            const data = await response.json();
            
            if (data.success) {
                customerData = data.data;
                updateCustomerInfo(customerData.customer);
                updateCustomerStatus(customerData.monitoring_history[0]);
                updateIncidentsList(customerData.alerts);
            }
        } catch (error) {
            console.error('Error loading customer data:', error);
        }
    }

    // Update customer info
    function updateCustomerInfo(customer) {
        document.getElementById('customerName').textContent = customer.name || '-';
        document.getElementById('serviceId').textContent = customer.service_id || '-';
        document.getElementById('packageName').textContent = customer.package_name || '-';
        document.getElementById('customerAddress').textContent = customer.address || '-';
    }

    // Update customer status
    function updateCustomerStatus(statusData) {
        if (statusData) {
            document.getElementById('connectionStatusText').textContent = getStatusText(statusData.status);
            document.getElementById('connectionStatusText').className = `text-lg font-semibold status-${statusData.status}`;
            document.getElementById('uptimePercentage').textContent = (statusData.uptime || 0) + '%';
            document.getElementById('latencyValue').textContent = (statusData.latency || 0) + 'ms';
        }
    }

    // Get status text
    function getStatusText(status) {
        switch(status) {
            case 'online': return 'Online';
            case 'offline': return 'Offline';
            case 'maintenance': return 'Maintenance';
            default: return 'Unknown';
        }
    }

    // Update incidents list
    function updateIncidentsList(incidents) {
        const container = document.getElementById('incidentsList');
        container.innerHTML = '';
        
        if (incidents && incidents.length > 0) {
            incidents.forEach(incident => {
                const incidentEl = document.createElement('div');
                incidentEl.className = `p-4 rounded-md mb-2 ${
                    incident.severity === 'critical' ? 'bg-red-50 border-l-4 border-red-400' :
                    incident.severity === 'warning' ? 'bg-yellow-50 border-l-4 border-yellow-400' :
                    'bg-blue-50 border-l-4 border-blue-400'
                }`;
                incidentEl.innerHTML = `
                    <div class="flex justify-between items-start">
                        <div>
                            <p class="text-sm font-medium text-gray-900">${incident.alert_type}</p>
                            <p class="text-sm text-gray-500">${incident.message}</p>
                            <p class="text-xs text-gray-400">${new Date(incident.created_at).toLocaleString()}</p>
                        </div>
                        <span class="px-2 py-1 text-xs font-semibold rounded-full ${
                            incident.severity === 'critical' ? 'bg-red-100 text-red-800' :
                            incident.severity === 'warning' ? 'bg-yellow-100 text-yellow-800' :
                            'bg-blue-100 text-blue-800'
                        }">
                            ${incident.severity}
                        </span>
                    </div>
                `;
                container.appendChild(incidentEl);
            });
        } else {
            container.innerHTML = '<p class="text-gray-500 text-center">Tidak ada insiden terbaru</p>';
        }
    }

    // Update performance charts
    function updatePerformanceCharts(data) {
        if (uptimeChart && data.uptime) {
            uptimeChart.data.labels = data.uptime.map(item => new Date(item.date).toLocaleDateString());
            uptimeChart.data.datasets[0].data = data.uptime.map(item => parseFloat(item.avg_uptime || 0));
            uptimeChart.update();
        }
        
        if (latencyChart && data.latency) {
            latencyChart.data.labels = data.latency.map(item => new Date(item.date).toLocaleDateString());
            latencyChart.data.datasets[0].data = data.latency.map(item => parseFloat(item.avg_latency || 0));
            latencyChart.update();
        }
    }

    // Initialize charts
    function initCharts() {
        // Uptime Chart
        const uptimeCtx = document.getElementById('uptimeChart').getContext('2d');
        uptimeChart = new Chart(uptimeCtx, {
            type: 'line',
            data: {
                labels: [],
                datasets: [{
                    label: 'Uptime (%)',
                    data: [],
                    borderColor: '#10b981',
                    backgroundColor: 'rgba(16, 185, 129, 0.1)',
                    tension: 0.1,
                    fill: true
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                scales: {
                    y: {
                        beginAtZero: true,
                        max: 100
                    }
                }
            }
        });

        // Latency Chart
        const latencyCtx = document.getElementById('latencyChart').getContext('2d');
        latencyChart = new Chart(latencyCtx, {
            type: 'line',
            data: {
                labels: [],
                datasets: [{
                    label: 'Latency (ms)',
                    data: [],
                    borderColor: '#3b82f6',
                    backgroundColor: 'rgba(59, 130, 246, 0.1)',
                    tension: 0.1,
                    fill: true
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                scales: {
                    y: {
                        beginAtZero: true
                    }
                }
            }
        });
    }

    // Refresh data
    document.getElementById('refreshBtn').addEventListener('click', function() {
        loadCustomerData();
    });

    // Initialize everything
    document.addEventListener('DOMContentLoaded', function() {
        initCharts();
        initWebSocket();
        loadCustomerData();
    });
    </script>
</body>
</html>

