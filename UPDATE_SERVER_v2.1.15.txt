═══════════════════════════════════════════════════════════════════════════════
  UPDATE SERVER v2.1.15 - FIX IMPORT DOUBLE & DATA CLEANUP
═══════════════════════════════════════════════════════════════════════════════

📌 IMPORTANT: Backup database dulu sebelum update!
┌─────────────────────────────────────────────────────────────────────────────┐
│ ⚠️  Migration ini akan hapus customer dengan format CUST-*                   │
│ ⚠️  Pastikan pull dari GitHub sudah done                                    │
└─────────────────────────────────────────────────────────────────────────────┘

═══════════════════════════════════════════════════════════════════════════════
🔄 QUICK UPDATE (COPY-PASTE)
═══════════════════════════════════════════════════════════════════════════════

# Backup database dulu!
mysqldump -u root -p billing > backup_$(date +%Y%m%d_%H%M%S).sql

# Update code dari GitHub
cd /opt/billing && \
git pull origin main && \
npm install && \
npm run build && \
npm install --production && \
pm2 restart billing-app --update-env

# Setelah itu, jalankan migration:
mysql -u root -p billing < migrations/fix_customer_code_format.sql

═══════════════════════════════════════════════════════════════════════════════
📋 DETAILED UPDATE STEPS
═══════════════════════════════════════════════════════════════════════════════

1. Backup Database (WAJIB!):
   ──────────────────────────────────────────────────────────────────────────
   mysqldump -u username -p nama_database > backup_$(date +%Y%m%d_%H%M%S).sql

2. Check git status di live server:
   ──────────────────────────────────────────────────────────────────────────
   cd /opt/billing
   git status
   
   Jika ada perubahan local yang belum committed:
   git stash
   atau
   git reset --hard HEAD  (HATI-HATI, ini akan discard local changes!)

3. Git Pull:
   ──────────────────────────────────────────────────────────────────────────
   git pull origin main

4. Install Dependencies:
   ──────────────────────────────────────────────────────────────────────────
   npm install

5. Build TypeScript:
   ──────────────────────────────────────────────────────────────────────────
   npm run build

6. Install Production Dependencies:
   ──────────────────────────────────────────────────────────────────────────
   npm install --production

7. Restart PM2:
   ──────────────────────────────────────────────────────────────────────────
   pm2 restart billing-app --update-env

8. Check Status:
   ──────────────────────────────────────────────────────────────────────────
   pm2 status
   pm2 logs billing-app --lines 50

9. Run Migration (PENTING!):
   ──────────────────────────────────────────────────────────────────────────
   mysql -u username -p database_name < migrations/fix_customer_code_format.sql

═══════════════════════════════════════════════════════════════════════════════
✨ FIXES DI v2.1.15
═══════════════════════════════════════════════════════════════════════════════

🔧 ALL CUSTOMER CODE NOW YYYYMMDDHHMMSS
─────────────────────────────────────────────────────────────────────────────
✅ src/services/staticIpClientService.ts - Fixed
✅ src/routes/index.ts - Fixed (removed manual generation)
✅ src/controllers/excelController.ts - Fixed
✅ Semua pakai CustomerIdGenerator.generateCustomerId()

🗑️ MIGRATION CLEANUP CUST-*
─────────────────────────────────────────────────────────────────────────────
✅ Hapus semua customer dengan format CUST-*
✅ Fix customer lama yang tidak valid
✅ Konsistensi format

═══════════════════════════════════════════════════════════════════════════════
⚠️  TROUBLESHOOTING
═══════════════════════════════════════════════════════════════════════════════

Problem: Git pull failed - local changes conflict
Solution:
─────────────────────────────────────────────────────────────────────────────
# Option 1: Stash local changes (save for later)
git stash
git pull origin main

# Option 2: Force pull (discard local changes)
git reset --hard HEAD
git pull origin main

# Option 3: Manual merge
git pull origin main
# Fix conflicts manually
git add .
git commit -m "Merge conflict resolved"

Problem: Migration error - table not found
Solution:
─────────────────────────────────────────────────────────────────────────────
1. Check migrations folder exists: ls migrations/
2. Verify migration file: cat migrations/fix_customer_code_format.sql
3. Check database name: mysql -u root -p -e "SHOW DATABASES;"
4. Run migration with correct database name

Problem: Import masih double setelah update
Solution:
─────────────────────────────────────────────────────────────────────────────
1. Delete customer yang double dari database langsung
2. Check PM2 restart: pm2 logs billing-app
3. Clear browser cache dan hard refresh (Ctrl + Shift + R)
4. Test import dengan data kecil (2-3 rows)
5. Check logs di browser console

Problem: Customer masih CUST-* di live server
Solution:
─────────────────────────────────────────────────────────────────────────────
1. Verify migration run: SELECT COUNT(*) FROM customers WHERE customer_code LIKE 'CUST-%';
2. If count > 0, run migration again
3. Check PM2 running latest code
4. Verify version: cat VERSION (should show 2.1.15)

═══════════════════════════════════════════════════════════════════════════════
🧪 VERIFICATION STEPS
═══════════════════════════════════════════════════════════════════════════════

After Update, Verify:

1. Check Version:
─────────────────────────────────────────────────────────────────────────────
cat VERSION
# Should show: 2.1.15

2. Check PM2:
─────────────────────────────────────────────────────────────────────────────
pm2 status
pm2 logs billing-app --lines 20

3. Verify Migration:
─────────────────────────────────────────────────────────────────────────────
mysql -u root -p billing -e "SELECT COUNT(*) as invalid FROM customers WHERE customer_code LIKE 'CUST-%';"
# Should return: 0

4. Test Excel Import:
─────────────────────────────────────────────────────────────────────────────
- Download template
- Fill 3 test customers
- Import
- Check customer list
- Verify all have YYYYMMDDHHMMSS format
- Verify NO duplicates

5. Delete Test Data:
─────────────────────────────────────────────────────────────────────────────
- Hapus test customers yang baru saja diimport
- Database ready for production use

═══════════════════════════════════════════════════════════════════════════════
📁 FILES CHANGED IN v2.1.15
═══════════════════════════════════════════════════════════════════════════════

Modified Files:
─────────────────────────────────────────────────────────────────────────────
✅ src/services/staticIpClientService.ts
✅ src/routes/index.ts
✅ src/controllers/excelController.ts (already fixed in v2.1.14)

Migration:
─────────────────────────────────────────────────────────────────────────────
✅ migrations/fix_customer_code_format.sql (cleanup CUST-*)

═══════════════════════════════════════════════════════════════════════════════
✅ UPDATE SELESAI
═══════════════════════════════════════════════════════════════════════════════

Check Version:
─────────────────────────────────────────────────────────────────────────────
cat VERSION
# Should show: 2.1.15

Check Git Log:
─────────────────────────────────────────────────────────────────────────────
git log --oneline -5

Check PM2:
─────────────────────────────────────────────────────────────────────────────
pm2 status
pm2 logs billing-app --lines 20

Test:
─────────────────────────────────────────────────────────────────────────────
1. Buka aplikasi di browser
2. Login
3. Buka customer list
4. Check semua customer punya format YYYYMMDDHHMMSS
5. Test import Excel
6. Verify no duplicates

═══════════════════════════════════════════════════════════════════════════════
📞 SUPPORT
═══════════════════════════════════════════════════════════════════════════════

Jika ada masalah:
1. Check log: pm2 logs billing-app
2. Check error messages
3. Verify migration completed
4. Run verification queries
5. Rollback dengan backup jika perlu

═══════════════════════════════════════════════════════════════════════════════

Release: v2.1.15
Date: 30 Oktober 2025
Type: Code Consistency Fix
Status: ✅ Production Ready
Requires Migration: Yes

═══════════════════════════════════════════════════════════════════════════════

